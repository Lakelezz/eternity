var searchIndex = JSON.parse('{\
"eternity":{"doc":"This crate ensures rate limits and can return cached …","t":[0,8,10,3,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,11,11,4,13,13,13,3,11,11,11,3,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["multi_bucket","ToBucket","to_bucket","LimitedRequestsModifier","delay","time_span","limit","await_ratelimits","build","LimitedRequests","new","insert_group","build_group","insert_groups","insert_bucket","insert_buckets","hit_limit","cache_or","mut_cache_or","CachedLimitedEnumsModifier","delay","time_span","limit","await_ratelimits","build","CachedLimitedEnums","new","insert_enum","insert_bucket","build_group","insert_enums","hit_limit","cache_or","mut_cache_or","RateLimitAction","Delayed","FailedDelay","Cancelled","Bucket","hit_limit","hit_or_cache","add_cache_value","RateLimitInfo","rate_limit","active_delays","is_first_try","action","cached","BucketBuilder","new","delay","time_span","limit","await_ratelimits","build","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","from","into","try_from","borrow","borrow_mut","try_into","type_id","clone","clone","default","default","default","fmt","fmt"],"q":["eternity","eternity::multi_bucket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eternity","","","","","","","","","","","","","","","","","","","","","eternity::multi_bucket","","","","","","","","","","","","","","","","","","","","","","","","","","","","eternity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eternity::multi_bucket","","eternity","",""],"d":["A multi-bucket type uses groups of buckets. Each group …","Creates a bucket using the key.","Turns a key into a bucket.","This builder takes ownership of <code>LimitedRequests</code> and …","The time to elapse between hitting the limiter.","How long the bucket will apply for.","Number of hits allowed per <code>time_span</code>.","If this is set to <code>true</code>, the invocation of the command …","Constructs the bucket, adds it to the related multi …","This limiter can use a <em>group key</em> for each bucket group …","Creates an empty limiter.","Inserts a single group by turning a <code>GroupKey</code> to a <code>Bucket</code>. ","Add a bucket group for the <code>bucket_key</code>. The method returns …","Inserts multiple groups at once using <code>GroupKey</code>s. ","Inserts a single <code>bucket</code> to the group with <code>group_key</code>.","Inserts multiple <code>buckets</code> to the group with <code>group_key</code>.","This method will return a rate limit once the conditions …","This method will access the cached value if limited <em>or</em> …","This method will access the cached value if limited <em>or</em> …","This builder takes ownership of <code>CachedLimitedEnums</code> and …","The time to elapse between hitting the limiter.","How long the bucket will apply for.","Number of hits allowed per <code>time_span</code>.","If this is set to <code>true</code>, the invocation of the command …","Constructs the bucket, adds it to the related multi …","Disclaimer:","Create an empty <code>CachedLimitedEnums</code>.","Inserts a single group by turning a <code>GroupKey</code> to a <code>Bucket</code>. …","Inserts an already created bucket for a <code>key</code>.","Inserts an already created bucket for a <code>key</code>.","Inserts multiple <em>enums</em>. The type must be an enum and …","This method will return a rate limit once the conditions …","This method will access the cached value if rate limited <em>…","This method will access the cached value if limited <em>or</em> …","Action taken for the command invocation.","Invocation has been delayed.","Tried to delay invocation but maximum of delays reached.","Cancelled the invocation due to time or ticket reasons.","This type checks for rate limits on <code>Key</code>s.  If caching is …","Tries to perform a hit in the bucket. If no hit can be …","First, checks the bucket for a potential rate limit. If a …","Inserts a cache value into the group of <code>key</code>.","Describes the rate limit encountered.","Time to elapse in order to invoke a command again.","Amount of active delays by this target.","Whether this is the first time the rate limit info has …","Action taken for this rate limit. <code>Delay</code> never occurs, as …","If a value has been cached, this field will yield a value.","Builds a <code>Bucket</code>.","A bucket collecting tickets per command invocation.","The time to elapse between hitting the limiter.","How long the bucket will apply for.","Number of hits allowed per <code>time_span</code>.","If this is set to <code>true</code>, the invocation of the command …","Constructs the bucket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,0,5,5,5,5,5,5,5,5,0,6,6,6,0,7,7,7,0,8,8,8,8,8,0,9,9,9,9,9,9,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,6,8,3,5,9,6,8],"f":[null,null,[[],[["option",4],["bucket",3]]],null,[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["bool",15]]],[[]],null,[[]],[[],["result",4]],[[],["limitedrequestsmodifier",3]],[[],[["result",4],["vec",3]]],[[["bucket",3]]],[[]],[[]],[[]],[[]],null,[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["bool",15]]],[[]],null,[[]],[[],["result",4]],[[["bucket",3]]],[[],["cachedlimitedenumsmodifier",3]],[[],[["result",4],["vec",3]]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["bool",15]]],[[],["bucket",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["ratelimitaction",4]],[[],["ratelimitinfo",3]],[[]],[[],["cachedlimitedenums",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"ToBucket"],[3,"LimitedRequestsModifier"],[3,"LimitedRequests"],[3,"CachedLimitedEnumsModifier"],[3,"CachedLimitedEnums"],[4,"RateLimitAction"],[3,"Bucket"],[3,"RateLimitInfo"],[3,"BucketBuilder"]]}\
}');
initSearch(searchIndex);